<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Unix-Like on 𝒯𝒾𝓂𝑒 𝓌𝒶𝒾𝓉𝓈 𝒻𝑜𝓇 𝓃𝑜 𝑜𝓃𝑒</title>
        <link>https://zhumocn.com/categories/unix-like/</link>
        <description>Recent content in Unix-Like on 𝒯𝒾𝓂𝑒 𝓌𝒶𝒾𝓉𝓈 𝒻𝑜𝓇 𝓃𝑜 𝑜𝓃𝑒</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 05 Mar 2024 17:13:34 +0800</lastBuildDate><atom:link href="https://zhumocn.com/categories/unix-like/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MyMacWorkflow</title>
        <link>https://zhumocn.com/p/mymacworkflow/</link>
        <pubDate>Tue, 05 Mar 2024 17:13:34 +0800</pubDate>
        
        <guid>https://zhumocn.com/p/mymacworkflow/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/xbunax/blogImg/main/workflow/cover.png" alt="Featured image of post MyMacWorkflow" /&gt;&lt;!-- ![cover](https://raw.githubusercontent.com/xbunax/blogImg/main/workflow/cover.png) --&gt;
&lt;!-- *spotify tui* --&gt;
&lt;h1 id=&#34;my-mac-workflow&#34;&gt;My Mac Workflow
&lt;/h1&gt;&lt;p&gt;作为一个六年的Mac用户，从2018款macbook pro到M2芯片的macbook air，积累了很多Mac的使用心得与好用的软件。在此分享一下我在Mac上的workflow。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Tips：本人专业背景为理论物理，主要科研工作偏向使用&lt;code&gt;Unix-like&lt;/code&gt;系统，所以不会涉及windows(但是可以使用&lt;code&gt;wsl2&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;推荐安装&lt;code&gt;homebrew&lt;/code&gt;作为MacOS上的包管理器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;!-- ## Reserch  --&gt;
&lt;h3 id=&#34;zotero&#34;&gt;Zotero
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;作为科研狗第一重要的事当然是看文献了，那么一个好的文献管理器至关重要，虽然学校提供了正版的EndNote但是相比而言更喜欢免费的Zotero，并且可以安装第三方插件，例如我装了preview插件可以预览文献内容。
并且我主要使用latex为论文排版，Zotero可以快速导出bibtex文件方便在论文中引用文献。&lt;/li&gt;
&lt;li&gt;同时Zotero可以利用官方提供的网盘进行多平台同步，但是免费容量只有5G，一般来说够用但是为了长远考虑，我使用微软学生认证提供的2T OneDrive挂载到koofr实现webDAV，这样就能使用白嫖到的2T空间做同步备份了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xbunax/blogImg/main/workflow/zotero.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;zotero&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;material-project&#34;&gt;Material Project
&lt;/h3&gt;&lt;p&gt;作为广大炼丹烧炉子研究工作者，在科研中肯定遇到要查询材料参数的情况，&lt;a class=&#34;link&#34; href=&#34;https://next-gen.materialsproject.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MaterialProject&lt;/a&gt;，这个网站作为材料领域做高通量计算方向搭建的，囊括了大量的材料参数，并且作为开源项目的一部分，此网站还提供了&lt;code&gt;python&lt;/code&gt;的&lt;code&gt;package(pymatgen)&lt;/code&gt;方便调用网站的api，可以获取材料的晶格结构等并且给出相关的文献。&lt;/p&gt;
&lt;!-- ![material](https://raw.githubusercontent.com/xbunax/blogImg/main/workflow/material.png) --&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xbunax/blogImg/main/202403091438804.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;material&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;pngpaste&#34;&gt;Pngpaste
&lt;/h3&gt;&lt;p&gt;我的论文写作工具主要是&lt;code&gt;neovim&lt;/code&gt;+&lt;code&gt;latex&lt;/code&gt;，但是由于饱受&lt;code&gt;latex&lt;/code&gt;上古语法困扰最近也在尝试&lt;code&gt;typst&lt;/code&gt;并且得益于&lt;code&gt;neovim&lt;/code&gt;活跃的社区，&lt;code&gt;typst&lt;/code&gt;的&lt;code&gt;lsp&lt;/code&gt;还有双向链接工具已经完全可用了。&lt;/p&gt;
&lt;p&gt;不管是&lt;code&gt;latex&lt;/code&gt;还是&lt;code&gt;typst&lt;/code&gt;写作时一直有一个痛点那就是插入图片，往往我会将图片截图存在剪贴板中，但是在用&lt;code&gt;neovim&lt;/code&gt;写论文时，经常要切出去保存图片非常影响效率。这时候我们就可以用&lt;code&gt;pngpaste&lt;/code&gt;这个CLI工具，可以在命令行环境下读取剪贴板图片保存为&lt;code&gt;png&lt;/code&gt;格式，这样在&lt;code&gt;neovim&lt;/code&gt;中用&lt;code&gt;toggleterm&lt;/code&gt;插件写一个&lt;code&gt;autocmd&lt;/code&gt;自动保存剪贴板图片，大大提升了效率。&lt;/p&gt;
&lt;h3 id=&#34;window-manager&#34;&gt;Window Manager
&lt;/h3&gt;&lt;p&gt;由于苹果的封闭，Mac上的窗口管理器选择并不是很多，&lt;code&gt;yabai&lt;/code&gt;虽然可以实现平铺窗口管理器的大部分功能，但是需要关闭SIP，无法在Mac上使用iPad和iPhone应用也无法使用Touch ID支付。博主本人尝试过后发现bug相对较多，而且&lt;code&gt;yabai&lt;/code&gt;的主要贡献者只有作者一人，&lt;code&gt;yabai&lt;/code&gt;调用的api非常底层，每次苹果更新系统过都要等待作者适配，就体验来说并不是很好。&lt;/p&gt;
&lt;p&gt;现在博主主力的window Manager是&lt;code&gt;amethyst&lt;/code&gt;。相比于&lt;code&gt;yabai&lt;/code&gt;的优势在于不用关闭SIP所以相对来说受系统版本变化影响较小，而且&lt;code&gt;amethyst&lt;/code&gt;配置相对简单，基本等于开箱即用，设置好快捷键键位就可以用了，不需要像&lt;code&gt;yabai&lt;/code&gt;设置好&lt;code&gt;yabairc&lt;/code&gt;还需要利用&lt;code&gt;skhd&lt;/code&gt;再去映射快捷键，虽然可以直接抄大佬的配置，但是需要踩的坑还是相对多一点。&lt;/p&gt;
&lt;p&gt;但是不需要关闭SIP，就意味着相较于&lt;code&gt;yabai&lt;/code&gt;，&lt;code&gt;amethyst&lt;/code&gt;相对而言还是缺少了类似于创建销毁窗口，设置windows animation全局窗口透明度这些功能。但是&lt;code&gt;amethyst&lt;/code&gt;作为平铺窗口管理还是合格了，快速移动窗口，一键更改布局，单独设置float窗口.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
